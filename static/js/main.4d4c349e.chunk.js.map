{"version":3,"sources":["components/shop-header/shop-header.jsx","actions/index.js","utils/compose.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.jsx","components/spinner/spinner.jsx","components/error-indicator/error-indicator.jsx","components/book-list-item/book-list-item.jsx","components/book-list/book-list.jsx","containers/book-list-container/book-list-container.js","components/shopping-cart-table/shopping-cart-table.jsx","components/pages/home-page.jsx","components/pages/cart-page.jsx","components/app/app.jsx","components/error-boundry/error-boundry.jsx","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["connect","_ref2","_ref2$shoppingCart","shoppingCart","orderTotal","numItems","_ref","react_default","a","createElement","className","Link","to","bookAddedToCart","bookId","type","payload","fetchBooks","bookstoreService","dispatch","getBooks","then","data","catch","error","booksError","compose","_len","arguments","length","funcs","Array","_key","comp","reduceRight","wrapped","f","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","Object","assign","Spinner","ErrorIndicator","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","BookList","books","map","key","id","book_list_item_book_list_item","BookListContainer","this","_this$props","loading","spinner_spinner","error_indicator_error_indicator","book_list_book_list","Component","_ref$bookList","bookList","ownProps","mapDispatchToProps","onIncrease","onDecrease","onDelete","items","cartItems","total","item","idx","count","HomePage","book_list_container","shopping_cart_table_shopping_cart_table","CartPage","App","role","shop_header_shop_header","Switch","Route","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","_this","Promise","resolve","reject","setTimeout","updateBookList","action","undefined","updateCartItems","concat","toConsumableArray","slice","updateOrder","quantity","find","exsistingBookId","findIndex","newItem","_item$id","_item$count","_item$title","_item$total","updateCartItem","reduce","previousValue","currentValue","updateShoppingCart","_ref3","reducer","store","createStore","ReactDOM","render","es","error_boundry_ErrorBoundry","value","BrowserRouter","app_app","document","getElementById"],"mappings":"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","file":"static/js/main.4d4c349e.chunk.js","sourcesContent":["import React from 'react';\nimport './shop-header.css';\n\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst ShopHeader = ({ orderTotal, numItems }) => {\n  return (\n    <header className=\"shop-header row\">\n      <Link to=\"/\">\n        <div className=\"logo text-dark\">ReStore</div>\n      </Link>\n      <Link to=\"/cart\">\n        <div className=\"shopping-cart\">\n        <i className=\"cart-icon fa fa-shopping-cart\" />\n        {numItems} items (${orderTotal})\n        </div>\n      </Link>\n    </header>\n  );\n};\n\nconst mapStateToProps = ({ shoppingCart: { orderTotal, numItems }}) => {\n  return {\n    orderTotal,\n    numItems\n  }\n}\n\nexport default connect(mapStateToProps)(ShopHeader);\n","\nconst booksLoaded = (newBooks) => {\n  return {\n    type: 'FETCH_BOOKS_SUCCESS',\n    payload: newBooks\n  };\n};\n\nconst booksRequested = () => {\n  return {\n    type: 'FETCH_BOOKS_REQUEST'\n  }\n}\n\nconst booksError = (error) => {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error\n  }\n}\n\nexport const bookAddedToCart = (bookId) => {\n  return {\n    type: 'BOOK_ADDED_TO_CART',\n    payload: bookId\n  }\n}\n\nexport const bookRemovedFromCart = (bookId) => {\n  return {\n    type: 'BOOK_REMOVED_FROM_CART',\n    payload: bookId\n  }\n}\n\nexport const allBooksRemovedFromCart = (bookId) => {\n  return {\n    type: 'ALL_BOOKS_REMOVED_FROM_CART',\n    payload: bookId\n  }\n}\n\nexport const fetchBooks = (bookstoreService, dispatch) => () => {\n  dispatch(booksRequested());\n  bookstoreService.getBooks()\n    .then((data) => dispatch(booksLoaded(data)))\n    .catch((error) => dispatch(booksError(error)))\n}\n","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","import React from 'react';\n\nconst {\n  Provider: BookstoreServiceProvider,\n  Consumer: BookstoreServiceConsumer\n} = React.createContext();\n\nexport {\n  BookstoreServiceProvider,\n  BookstoreServiceConsumer\n};\n","import React from 'react';\nimport { BookstoreServiceConsumer } from '../bookstore-service-context/bookstore-service-context';\n\nconst withBookstoreService = () => (Wrapped) => {\n\n  return (props) => {\n    return (\n      <BookstoreServiceConsumer>\n        {\n          (bookstoreService) => {\n            return (<Wrapped {...props}\n                     bookstoreService={bookstoreService}/>);\n          }\n        }\n      </BookstoreServiceConsumer>\n    );\n  }\n};\n\nexport default withBookstoreService;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n  return <div>loading...</div>;\n};\n\nexport default Spinner;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return <div>Error!</div>;\n};\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './book-list-item.css';\n\nconst BookListItem = ({ book, onAddedToCart}) => {\n  const { title, author, price, coverImage } = book;\n  return (\n    <div className=\"book-list-item\">\n      <div className=\"book-cover\">\n        <img src={coverImage} alt=\"cover\" />\n      </div>\n      <div className=\"book-details\">\n        <span className=\"book-title\">{title}</span>\n        <div className=\"book-author\">{author}</div>\n        <div className=\"book-price\">${price}</div>\n        <button \n          onClick={onAddedToCart}\n          className=\"btn btn-info add-to-cart\">\n            Add to cart\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default BookListItem;\n","import React from 'react';\nimport BookListItem from '../book-list-item/book-list-item';\nimport './book-list.css';\n\nconst BookList = ({ books, onAddedToCart }) => {\n  return (\n    <ul className=\"book-list\">\n      {\n        books.map((book) => {\n          return (\n            <li key={book.id}>\n              <BookListItem \n                book={book}\n                onAddedToCart={() => onAddedToCart(book.id)}/>\n            </li>\n          )\n        })\n      }\n    </ul>\n  );\n};\n\nexport default BookList;","import React, { Component } from 'react';\nimport { fetchBooks, bookAddedToCart } from \"../../actions\";\nimport compose from \"../../utils/compose\";\nimport withBookstoreService from \"../../components/hoc/with-bookstore-service\";\nimport {connect} from \"react-redux\";\n\nimport Spinner from '../../components/spinner/spinner';\nimport ErrorIndicator from '../../components/error-indicator/error-indicator';\nimport BookList from '../../components/book-list/book-list';\n\nclass BookListContainer extends Component {\n  componentDidMount() {\n    this.props.fetchBooks()\n  }\n\n  render() {\n    const { books, loading, error, onAddedToCart } = this.props;\n\n    if (loading) {\n      return <Spinner />\n    }\n\n    if (error) {\n      return <ErrorIndicator />\n    }\n    return <BookList books={books} onAddedToCart={onAddedToCart}/>\n  }\n}\n\nconst mapStateToProps = ({ bookList: { books, loading, error }}) => {\n  return { books, loading, error };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { bookstoreService } = ownProps;\n  return {\n    fetchBooks: fetchBooks(bookstoreService, dispatch),\n    onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n  }\n}\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookListContainer);\n","import React from 'react';\nimport './shopping-cart-table.css';\n\nimport { connect } from 'react-redux';\n\nimport { bookAddedToCart, bookRemovedFromCart, allBooksRemovedFromCart } from '../../actions';\n\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\n  const renderRow = (item, idx) => {\n    const { id, title, count, total } = item;\n    return (\n    <tr key={id}>\n      <td>{idx + 1}</td>\n      <td>{title}</td>\n      <td>{count}</td>\n      <td>{total}</td>\n      <td>\n        <div className=\"buttons-block\">\n          <button \n            onClick={() => onDelete(id)}\n            className=\"btn btn-outline-danger btn-sm float-right\">\n            <i className=\"fa fa-trash-o\" />\n          </button>\n          <button \n            onClick={() => onIncrease(id)}\n            className=\"btn btn-outline-info btn-sm float-right\">\n            <i className=\"fa fa-plus-circle\" />\n          </button>\n          <button \n            onClick={() => onDecrease(id)}\n            className=\"btn btn-outline-info btn-sm float-right\">\n            <i className=\"fa fa-minus-circle\" />\n          </button>\n        </div>\n      </td>\n    </tr>\n    )\n  }\n  \n  return (\n    <div className=\"shopping-cart-table\">\n      <h2>Your Order</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Item</th>\n            <th>Count</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          { items.map(renderRow) }\n        </tbody>\n      </table>\n\n      <div className=\"total\">\n        Total: ${total}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ shoppingCart: { cartItems , orderTotal }}) => {\n  return {\n    items: cartItems,\n    total: orderTotal\n  }\n}\n\nconst mapDispatchToProps = {\n    onIncrease: bookAddedToCart,\n    onDecrease: bookRemovedFromCart,\n    onDelete: allBooksRemovedFromCart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\n","import React from 'react';\nimport BookListContainer from '../../containers/book-list-container/book-list-container';\nimport ShoppingCartTable from '../shopping-cart-table/shopping-cart-table';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <BookListContainer />\n      <ShoppingCartTable />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst CartPage = () => {\n  return <div>Cart Page</div>\n};\n\nexport default CartPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ShopHeader from '../shop-header/shop-header';\nimport HomePage from '../pages/home-page';\nimport CartPage from '../pages/cart-page'\n\n\nimport './app.css';\n\nconst App = () => {\n  return (\n    <main role=\"main\" className=\"container\">\n      <ShopHeader numItems={5} total={210}/>\n      <Switch>\n        <Route\n          path=\"/\"\n          component={HomePage}\n          exact />\n        <Route\n          path=\"/cart\"\n          component={CartPage}\n          />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator/error-indicator';\n\nexport default class ErrorBoundry extends Component {\n\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}","\nexport default class BookstoreService {\n\n    data = [\n        {\n          id: 1,\n          title: 'Code Complete (Developer Best Practices)',\n          author: 'Steve McConnell',\n          price: 25,\n          coverImage: 'https://images-na.ssl-images-amazon.com/images/I/51MEZDyKvZL._SX409_BO1,204,203,200_.jpg'\n        },\n        {\n          id: 2,\n          title: 'Grokking algorithms',\n          author: 'Bhargava Aditya ',\n          price: 41,\n          coverImage: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTrJDutY9mHO9QigjGhJ2sfuFVTaOiMyBNO0Qi1hHSzk5woEzOd'\n        }\n    ];\n\n    getBooks() {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // if (Math.random() > 0.75) {\n              //   reject(new Error('blablabla'))\n              // } else {\n              //   resolve(this.data)\n              // }\n              resolve(this.data)\n            }, 700)\n        })\n    }\n}","const updateBookList = (state, action) => {\n\n    if (state === undefined) {\n      return {\n        books: [],\n        loading: true,\n        error: null\n      };\n    }\n  \n    switch (action.type) {\n      case 'FETCH_BOOKS_REQUEST':\n        return {\n          books: [],\n          loading: true,\n          error: null\n        };\n      case 'FETCH_BOOKS_SUCCESS':\n        return {\n          books: action.payload,\n          loading: false,\n          error: null\n        };\n      case 'FETCH_BOOKS_FAILURE':\n        return {\n          books: [],\n          loading: false,\n          error: true\n        }\n      default:\n        return state.bookList;\n    }\n}\n\nexport default updateBookList;","\nconst updateCartItems = (cartItems, item, idx) => {\n\n    if (item.count === 0) {\n      return [\n        ...cartItems.slice(0, idx),\n        ...cartItems.slice(idx + 1)\n      ];\n    }\n  \n    if (idx === -1) {\n      return [\n        ...cartItems,\n        item\n      ]\n    }\n  \n    return [\n      ...cartItems.slice(0, idx),\n      item,\n      ...cartItems.slice(idx + 1)\n    ];\n  \n}\n  \nconst updateCartItem = (book, item = {}, quantity) => {\n  \n    const {\n      id = book.id,\n      count = 0, \n      title = book.title, \n      total = 0 } = item;\n  \n    return {\n        id,\n        title,\n        count: count + quantity,\n        total: total + quantity * book.price\n    }\n}\n  \nconst updateOrder = (state, bookId, quantity) => {\n  \n    const { bookList: { books }, shoppingCart: { cartItems }} = state;\n  \n    const book = books.find(({ id }) => id === bookId);\n    const exsistingBookId = cartItems.findIndex(({ id }) => id === bookId);\n    const oldItem = cartItems[exsistingBookId];\n  \n    const newItem = updateCartItem(book, oldItem, quantity);\n\n    return {\n      orderTotal: updateCartItems(cartItems, newItem, exsistingBookId)\n                .reduce((previousValue, currentValue) => previousValue + currentValue.total, 0),\n      numItems: updateCartItems(cartItems, newItem, exsistingBookId)\n                .reduce((previousValue, currentValue) => previousValue + currentValue.count, 0),\n      cartItems: updateCartItems(cartItems, newItem, exsistingBookId)\n    }\n}\n  \nconst updateShoppingCart = (state, action) => {\n  \n    if (state === undefined) {\n      return {\n        cartItems: [],\n        orderTotal: 0,\n        numItems: 0\n      }\n    }\n  \n    switch (action.type) {\n      case 'BOOK_ADDED_TO_CART':\n        return updateOrder(state, action.payload, 1);\n      case 'BOOK_REMOVED_FROM_CART':\n        return updateOrder(state, action.payload, -1);\n      case 'ALL_BOOKS_REMOVED_FROM_CART':\n        const item = state.shoppingCart.cartItems.find(({ id }) => id === action.payload)\n        return updateOrder(state, action.payload, -item.count);\n      default:\n        return state.shoppingCart;\n    } \n}\n  \nexport default updateShoppingCart;","import updateBookList from './book-list';\nimport updateShoppingCart from './shopping-cart';\n\nconst reducer = (state, action) => {\n  return {\n    bookList: updateBookList(state, action),\n    shoppingCart: updateShoppingCart(state, action)\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app/app';\nimport ErrorBoundry from './components/error-boundry/error-boundry';\nimport BookstoreService from './services/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context/bookstore-service-context';\n\nimport store from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <BookstoreServiceProvider value={bookstoreService}>\n        <Router>\n          <App />\n        </Router>\n      </BookstoreServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}